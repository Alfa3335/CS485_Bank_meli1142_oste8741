<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.2">
  <zoom_level>10</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>30</x>
      <y>30</y>
      <w>340</w>
      <h>250</h>
    </coordinates>
    <panel_attributes>/Account/
-
- AccountNumber: int
- CurrentBalance: long long
- InterestRate: float
-
+ Account() = delete
+ Account(int, long long, float)
/+ ~Account() = 0/
+ Withdraw(long long): virtual void
+ Deposit(long long): void
+ ToString(): virtual std::string
+ MonthlyUpkeep(): virtual void
+ GetAccountNumber(): int
+ GetBalance(): long long int
+ operator&lt;&lt;(std::ostream, Account): std::ostream&amp; 
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>30</x>
      <y>410</y>
      <w>390</w>
      <h>130</h>
    </coordinates>
    <panel_attributes>CheckingAccount
-
- MinimumBalance: long long
- Fee: long long
-
+ CheckingAccount() = delete
+ CheckingAccount(int, long long, float, long long, long long)
+ Withdraw(long long): void
+ ToString(): std::string</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>440</x>
      <y>410</y>
      <w>380</w>
      <h>130</h>
    </coordinates>
    <panel_attributes>SavingsAccount
-
- MonthlyFee: long long
- MinMonthlyBalance: long long
-
+ SavingsAccount() = delete
+ SavingsAccount(int, long long, float, long long, long long)'
+ MonthlyUpkeep(): void
+ ToString(): std::string</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>380</x>
      <y>30</y>
      <w>140</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>Might do a user
defined cast in place
of ToString if that 
would be more 
appropriate
bg=pink</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>580</x>
      <y>30</y>
      <w>240</w>
      <h>210</h>
    </coordinates>
    <panel_attributes>Bank
-
- Accounts: std::vector&lt;*Account&gt;
-
+ Bank()
+ Bank(std::vector&lt;*Account&gt;)
+ ~Bank()
+ AddAccount(&amp;IAccountInput): void
+ Withdraw(int, long long): void
+ Deposit(int, long long): void
+ ToString(): std::string
+ MontlyUpkeep(): void
- FindAccount(int): *Account
- RemoveAccount(int): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>380</x>
      <y>130</y>
      <w>140</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>Does the delete 
default constructor 
and pure virtual 
destructor trigger 
Rule of three?
bg=cyan</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>30</x>
      <y>300</y>
      <w>230</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>If we can't withdraw an amount
greater than the account's 
current balance, Withdraw() will
return a bool instread
bg=blue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>270</x>
      <y>270</y>
      <w>30</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;140.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>290</x>
      <y>270</y>
      <w>360</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;80.0;340.0;80.0;340.0;140.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>360</x>
      <y>170</y>
      <w>240</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>220.0;10.0;190.0;10.0;190.0;80.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>30</x>
      <y>600</y>
      <w>390</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>/ICommandInput/
-
+ GetCommand() = 0: virtual std::Tuple&lt;char, int, long long&gt;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>80</x>
      <y>690</y>
      <w>330</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>CommandIStream
-
# stream: std::istream
-
+ CommandIStream(std::istream)
+ GetCommand(): std::Tuple&lt;char, int, long long&gt;
+ StreamDone(): bool</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>110</x>
      <y>830</y>
      <w>250</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>CommandFileStream
-
+ CommandFileStream(std::string)
+ ~CommandFileStream()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>230</x>
      <y>640</y>
      <w>30</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>230</x>
      <y>780</y>
      <w>30</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>890</x>
      <y>410</y>
      <w>230</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>/IAccountInput/
-
+ GetAccount() = 0: virtual Account</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>830</x>
      <y>30</y>
      <w>190</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>We aren't going to be using
raw pointers in our final
program, but we aren't sure
what kind of smart pointer
would be best yet, so we 
marked them down as raw 
pointers for now
bg=green</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>900</x>
      <y>490</y>
      <w>210</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>AccountIStream
-
# stream: std::istream
-
+ AccountIStream(std::istream)
+ GetAccount(): Account
+ StreamDone(): bool</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>880</x>
      <y>630</y>
      <w>250</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>AccountFileStream
-
+ AccountFileStream(std::string)
+ ~AccountFileStream()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1000</x>
      <y>450</y>
      <w>30</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;40.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1000</x>
      <y>580</y>
      <w>30</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>890</x>
      <y>280</y>
      <w>330</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>BankOStream
-
# stream: std::ostream
-
+ BankOStream(std::ostream)
+ PrintBank(const &amp;Bank): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>830</x>
      <y>160</y>
      <w>220</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>Possibly add 
ParseCommand(ICommandInput)
rather than parsing commands in
main and ICommandInput
bg=yellow</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>650</x>
      <y>230</y>
      <w>390</w>
      <h>200</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;150.0;370.0;150.0;370.0;180.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>700</x>
      <y>230</y>
      <w>210</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>190.0;90.0;10.0;90.0;10.0;10.0</additional_attributes>
  </element>
</diagram>
